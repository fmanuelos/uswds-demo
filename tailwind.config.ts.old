import { addDynamicIconSelectors } from '@iconify/tailwind'
import tailwindTypography from '@tailwindcss/typography'
import plugin from 'tailwindcss/plugin'
import type { Config } from 'tailwindcss'

const config: Config = {
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    extend: {
      typography: (theme: any) => ({
        DEFAULT: {
          css: {
            '--tw-prose-body': theme('colors.gray-70'),
            '--tw-prose-headings': theme('colors.gray-90'),
            '--tw-prose-lead': theme('colors.gray-60'),
            '--tw-prose-links': theme('colors.blue-60'),
            '--tw-prose-bold': theme('colors.gray-90'),
            '--tw-prose-counters': theme('colors.gray-60'),
            '--tw-prose-bullets': theme('colors.gray-40'),
            '--tw-prose-hr': theme('colors.gray-20'),
            '--tw-prose-quotes': theme('colors.gray-90'),
            '--tw-prose-quote-borders': theme('colors.gray-20'),
            '--tw-prose-captions': theme('colors.gray-60'),
            '--tw-prose-code': theme('colors.gray-90'),
            '--tw-prose-pre-code': theme('colors.gray-10'),
            '--tw-prose-pre-bg': theme('colors.gray-90'),
            '--tw-prose-th-borders': theme('colors.gray-30'),
            '--tw-prose-td-borders': theme('colors.gray-20'),
            maxWidth: 'none',
            fontSize: theme('fontSize.lg')?.[0] || '1.125rem',
            fontFamily: theme('fontFamily.source-sans')?.fontFamily || 'Source Sans 3 Variable',
            '--font-normalization': theme('fontFamily.source-sans')?.multiplier || 1,
            lineHeight: theme('lineHeight.relaxed'),
            '> * + *': {
              marginTop: theme('spacing.6'),
            },
            '> * + h1, > * + h2, > * + h3, > * + h4, > * + h5, > * + h6': {
              marginTop: theme('spacing.8'),
            },
            'h1': {
              fontSize: theme('fontSize.4xl')?.[0] || '2.25rem',
              fontFamily: theme('fontFamily.merriweather')?.fontFamily || 'Merriweather',
              '--font-normalization': theme('fontFamily.merriweather')?.multiplier || 1,
              lineHeight: theme('lineHeight.tight'),
              fontWeight: theme('fontWeight.bold'),
            },
            'h2': {
              fontSize: theme('fontSize.3xl')?.[0] || '1.875rem',
              fontFamily: theme('fontFamily.merriweather')?.fontFamily || 'Merriweather',
              '--font-normalization': theme('fontFamily.merriweather')?.multiplier || 1,
              lineHeight: theme('lineHeight.tight'),
              fontWeight: theme('fontWeight.bold'),
            },
            'h3': {
              fontSize: theme('fontSize.xl')?.[0] || '1.25rem',
              fontFamily: theme('fontFamily.merriweather')?.fontFamily || 'Merriweather',
              '--font-normalization': theme('fontFamily.merriweather')?.multiplier || 1,
              lineHeight: theme('lineHeight.tight'),
              fontWeight: theme('fontWeight.bold'),
            },
            'h4': {
              fontSize: theme('fontSize.lg')?.[0] || '1.125rem',
              fontFamily: theme('fontFamily.merriweather')?.fontFamily || 'Merriweather',
              '--font-normalization': theme('fontFamily.merriweather')?.multiplier || 1,
              lineHeight: theme('lineHeight.tight'),
              fontWeight: theme('fontWeight.bold'),
            },
            'h5': {
              fontSize: theme('fontSize.base')?.[0] || '1rem',
              fontFamily: theme('fontFamily.public-sans')?.fontFamily || 'Public Sans Variable',
              '--font-normalization': theme('fontFamily.public-sans')?.multiplier || 1,
              lineHeight: theme('lineHeight.tight'),
              fontWeight: theme('fontWeight.bold'),
            },
            'h6': {
              fontSize: theme('fontSize.sm')?.[0] || '0.875rem',
              fontFamily: theme('fontFamily.source-sans')?.fontFamily || 'Source Sans 3 Variable',
              '--font-normalization': theme('fontFamily.source-sans')?.multiplier || 1,
              lineHeight: theme('lineHeight.none'),
              fontWeight: theme('fontWeight.normal'),
              letterSpacing: theme('letterSpacing.wide'),
              textTransform: 'uppercase',
            },
          },
        }
      })
    }
  },
  plugins: [
    // JavaScript-only plugins that can't be converted to CSS-first
    addDynamicIconSelectors({
      scale: 0
    }),
    
    // Typography plugin
    tailwindTypography()
  ],
}

export default config
