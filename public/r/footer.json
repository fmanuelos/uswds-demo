{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "footer",
  "type": "registry:block",
  "title": "Footer",
  "description": "USWDS-compliant footer block with navigation links and proper semantic structure.",
  "dependencies": [
    "clsx"
  ],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/blocks/Footer/Footer.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/Button/Button\"\nimport { Icon } from \"@/components/ui/Icon/Icon\"\n\n// Types for footer structure\nexport interface FooterLink {\n  label: string\n  href: string\n}\n\nexport interface FooterTopic {\n  title: string\n  links: FooterLink[]\n}\n\nexport interface SocialLink {\n  platform: string\n  href: string\n  icon: string // Icon class name\n  label: string // Screen reader label\n}\n\nexport interface ContactInfo {\n  phone?: string\n  email?: string\n  address?: string\n}\n\nexport interface AgencyInfo {\n  name: string\n  logo?: string\n  logoAlt?: string\n}\n\nexport interface FooterNavigation {\n  topics?: FooterTopic[]\n  primaryLinks?: FooterLink[]\n  socialLinks?: SocialLink[]\n}\n\n// Footer variants\nconst footerVariants = cva(\n  \"@container\",\n  {\n    variants: {\n      variant: {\n        default: \"\",\n        medium: \"\",\n        slim: \"\"\n      }\n    },\n    defaultVariants: {\n      variant: \"default\"\n    }\n  }\n)\n\n// Accordion component for mobile navigation\nconst FooterAccordion: React.FC<{\n  topics: FooterTopic[]\n}> = ({ topics }) => {\n  const [openItems, setOpenItems] = React.useState<Set<number>>(new Set())\n\n  const toggleItem = (index: number) => {\n    const newOpenItems = new Set(openItems)\n    if (newOpenItems.has(index)) {\n      newOpenItems.delete(index)\n    } else {\n      newOpenItems.add(index)\n    }\n    setOpenItems(newOpenItems)\n  }\n\n  return (\n    <div className=\"@mobile-lg:hidden @desktop:gap-x-8 divide-y @mobile-lg:divide-y-0 divide-gray-30 border-t @mobile-lg:border-t-0 border-t-gray-30\">\n      {topics.map((topic, index) => {\n        const isOpen = openItems.has(index)\n        return (\n          <section key={index}>\n            <h4 className=\"relative font-bold font-merriweather\">\n              <button\n                onClick={() => toggleItem(index)}\n                className=\"group flex items-center w-full p-4 bg-gray-5 font-bold focus:outline focus:outline-4 focus:-outline-offset-4 focus:outline-blue-40 cursor-pointer text-left gap-2\"\n                aria-expanded={isOpen}\n              >\n                <Icon \n                  icon={isOpen ? \"expand_more\" : \"arrow_forward\"} \n                  size=\"sm\" \n                  className=\"size-6\" \n                />\n                {topic.title}\n              </button>\n            </h4>\n            {isOpen && (\n              <div>\n                <ul className=\"space-y-4 px-4 pb-6 pt-3\">\n                  {topic.links.map((link, linkIndex) => (\n                    <li key={linkIndex}>\n                      <a\n                        href={link.href}\n                        className=\"text-blue-60 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n                      >\n                        {link.label}\n                      </a>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </section>\n        )\n      })}\n    </div>\n  )\n}\n\n// Desktop navigation grid\nconst FooterDesktopNav: React.FC<{\n  topics: FooterTopic[]\n}> = ({ topics }) => (\n  <div className=\"hidden @mobile-lg:grid @mobile-lg:grid-cols-2 @desktop:grid-cols-4 gap-x-4 gap-y-8\">\n    {topics.map((topic, index) => (\n      <section key={index}>\n        <h4 className=\"font-bold font-merriweather mb-4\">{topic.title}</h4>\n        <ul className=\"space-y-4\">\n          {topic.links.map((link, linkIndex) => (\n            <li key={linkIndex}>\n              <a\n                href={link.href}\n                className=\"text-blue-60 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n              >\n                {link.label}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </section>\n    ))}\n  </div>\n)\n\n// Newsletter signup component\nconst NewsletterSignup: React.FC<{\n  onSignup?: (email: string) => void\n}> = ({ onSignup }) => {\n  const [email, setEmail] = React.useState(\"\")\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n    onSignup?.(email)\n    setEmail(\"\")\n  }\n\n  return (\n    <div className=\"py-8 px-4 @desktop:px-8\">\n      <h3 className=\"text-lg font-bold font-merriweather\">Sign Up</h3>\n      <form onSubmit={handleSubmit} className=\"max-w-xs mt-3\">\n        <label htmlFor=\"footer-email\" className=\"block\">Your email address</label>\n        <div className=\"mt-2 relative\">\n          <input\n            id=\"footer-email\"\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            className={cn(\n              \"p-2 w-full max-w-lg h-10 border border-gray-60\",\n              \"focus:outline focus:outline-offset-0 focus:outline-4 focus:outline-blue-40\",\n              \"data-[invalid]:ring-4 data-[invalid]:ring-red-60 data-[invalid]:border-transparent data-[invalid]:outline-offset-4\"\n            )}\n            required\n          />\n          <Button\n            type=\"submit\"\n            className=\"mt-2 w-full bg-blue-60 hover:bg-blue-warm-70 active:bg-blue-warm-80 focus:outline-blue-40\"\n          >\n            Sign Up\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\n// Social media links component\nconst SocialLinks: React.FC<{\n  socialLinks: SocialLink[]\n}> = ({ socialLinks }) => (\n  <div className=\"flex flex-wrap @mobile-lg:justify-end gap-2\">\n    {socialLinks.map((social, index) => (\n      <div key={index}>\n        <a\n          href={social.href}\n          className=\"block text-gray-90 size-12 p-2 bg-black/10 hover:bg-white focus:outline focus:outline-4 focus:outline-blue-40\"\n        >\n          <div className={cn(social.icon, \"size-full\")} />\n          <span className=\"sr-only\">{social.label}</span>\n        </a>\n      </div>\n    ))}\n  </div>\n)\n\n// Contact information component\nconst ContactInfo: React.FC<{\n  contact: ContactInfo\n  className?: string\n}> = ({ contact, className }) => (\n  <address className={cn(\"flex flex-wrap gap-x-4 @desktop:gap-x-8\", className)}>\n    {contact.phone && (\n      <div className=\"leading-tighter\">\n        <a\n          href={`tel:${contact.phone.replace(/\\D/g, '')}`}\n          className=\"text-gray-90 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n        >\n          {contact.phone}\n        </a>\n      </div>\n    )}\n    {contact.email && (\n      <div className=\"leading-tighter\">\n        <a\n          href={`mailto:${contact.email}`}\n          className=\"text-gray-90 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n        >\n          {contact.email}\n        </a>\n      </div>\n    )}\n  </address>\n)\n\nexport interface FooterProps\n  extends React.HTMLAttributes<HTMLElement>,\n    VariantProps<typeof footerVariants> {\n  navigation?: FooterNavigation\n  agencyInfo?: AgencyInfo\n  contactInfo?: ContactInfo\n  showReturnToTop?: boolean\n  showNewsletter?: boolean\n  onNewsletterSignup?: (email: string) => void\n  returnToTopHref?: string\n}\n\nconst Footer = React.forwardRef<HTMLElement, FooterProps>(\n  ({\n    className,\n    variant,\n    navigation = {},\n    agencyInfo,\n    contactInfo,\n    showReturnToTop = true,\n    showNewsletter = false,\n    onNewsletterSignup,\n    returnToTopHref = \"#\",\n    ...props\n  }, ref) => {\n    const { topics = [], primaryLinks = [], socialLinks = [] } = navigation\n\n    const renderDefaultFooter = () => (\n      <>\n        {/* Return to top */}\n        {showReturnToTop && (\n          <div className=\"px-4 py-5 @desktop:px-8\">\n            <a\n              href={returnToTopHref}\n              className=\"text-blue-60 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n            >\n              Return to top\n            </a>\n          </div>\n        )}\n\n        {/* Main content area */}\n        <div className=\"bg-gray-5 grid @tablet:grid-cols-3 gap-x-4\">\n          {/* Navigation */}\n          {topics.length > 0 && (\n            <nav\n              aria-label=\"Footer navigation\"\n              className=\"@tablet:col-span-2 @mobile-lg:py-8 @mobile-lg:px-4 @desktop:px-8 border-b @tablet:border-b-0 border-b-gray-30\"\n            >\n              <FooterAccordion topics={topics} />\n              <FooterDesktopNav topics={topics} />\n            </nav>\n          )}\n\n          {/* Newsletter signup */}\n          {showNewsletter && (\n            <NewsletterSignup onSignup={onNewsletterSignup} />\n          )}\n        </div>\n\n        {/* Primary links */}\n        {primaryLinks.length > 0 && (\n          <nav className=\"bg-gray-5 @desktop:px-4\">\n            <ul className=\"flex flex-wrap flex-col @mobile-lg:flex-row divide-y @mobile-lg:divide-y-0 divide-y-gray-30 border-y @mobile-lg:border-y-0 border-y-gray-30\">\n              {primaryLinks.map((link, index) => (\n                <li key={index} className=\"@mobile-lg:w-1/3 @desktop:w-auto\">\n                  <a\n                    href={link.href}\n                    className=\"block p-4 font-bold text-gray-90 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n                  >\n                    {link.label}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        )}\n\n        {/* Agency info and contact */}\n        {(agencyInfo || contactInfo || socialLinks.length > 0) && (\n          <div className=\"bg-gray-10 px-4 @desktop:px-8 py-5\">\n            <div className=\"grid @mobile-lg:grid-cols-2 gap-y-8 gap-x-4\">\n              {/* Agency info */}\n              {agencyInfo && (\n                <div className=\"flex flex-wrap flex-col @mobile-lg:flex-row @mobile-lg:items-center gap-4\">\n                  {agencyInfo.logo && (\n                    <div>\n                      <img\n                        src={agencyInfo.logo}\n                        alt={agencyInfo.logoAlt || agencyInfo.name}\n                        className=\"bg-white size-20 rounded-full object-cover\"\n                      />\n                    </div>\n                  )}\n                  <div>\n                    <p className=\"text-xl font-bold\">{agencyInfo.name}</p>\n                  </div>\n                </div>\n              )}\n\n              {/* Social links and contact */}\n              <div className=\"@mobile-lg:text-right grow space-y-3\">\n                {socialLinks.length > 0 && (\n                  <SocialLinks socialLinks={socialLinks} />\n                )}\n                {contactInfo && (\n                  <>\n                    <p className=\"text-xl font-bold\">Agency Contact Center</p>\n                    <ContactInfo\n                      contact={contactInfo}\n                      className=\"@mobile-lg:justify-end\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    )\n\n    const renderSlimFooter = () => (\n      <>\n        {/* Return to top */}\n        {showReturnToTop && (\n          <div className=\"px-4 py-5 @desktop:px-8\">\n            <a\n              href={returnToTopHref}\n              className=\"text-blue-60 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n            >\n              Return to top\n            </a>\n          </div>\n        )}\n\n        {/* Primary navigation and contact */}\n        <nav className=\"bg-gray-5 @desktop:px-4 grid @mobile-lg:grid-cols-3\">\n          {primaryLinks.length > 0 && (\n            <ul className=\"flex flex-wrap @mobile-lg:col-span-2 flex-col @mobile-lg:flex-row divide-y @mobile-lg:divide-y-0 divide-y-gray-30 border-y @mobile-lg:border-y-0 border-y-gray-30\">\n              {primaryLinks.map((link, index) => (\n                <li key={index} className=\"@mobile-lg:w-1/2 @desktop:w-auto\">\n                  <a\n                    href={link.href}\n                    className=\"block p-4 font-bold text-gray-90 visited:text-violet-70 hover:text-blue-70 focus:outline focus:outline-4 focus:outline-blue-40 underline\"\n                  >\n                    {link.label}\n                  </a>\n                </li>\n              ))}\n            </ul>\n          )}\n\n          {contactInfo && (\n            <ContactInfo\n              contact={contactInfo}\n              className=\"flex-wrap p-4 @mobile-lg:p-0 gap-x-8 @mobile-lg:gap-x-0\"\n            />\n          )}\n        </nav>\n\n        {/* Agency info */}\n        {agencyInfo && (\n          <div className=\"bg-gray-10 px-4 @desktop:px-8 py-5\">\n            <div className=\"flex flex-wrap @mobile-lg:items-center @mobile-lg:justify-between gap-4\">\n              {agencyInfo.logo && (\n                <img\n                  src={agencyInfo.logo}\n                  alt={agencyInfo.logoAlt || agencyInfo.name}\n                  className=\"bg-white size-12 rounded-full object-cover\"\n                />\n              )}\n              <p className=\"text-xl font-bold\">{agencyInfo.name}</p>\n            </div>\n          </div>\n        )}\n      </>\n    )\n\n    return (\n      <footer\n        ref={ref}\n        className={cn(footerVariants({ variant }), className)}\n        {...props}\n      >\n        <div className=\"w-full max-w-screen-xl mx-auto\">\n          {variant === \"slim\" ? renderSlimFooter() : renderDefaultFooter()}\n        </div>\n      </footer>\n    )\n  }\n)\n\nFooter.displayName = \"Footer\"\n\nexport { Footer, footerVariants }",
      "type": "registry:component"
    }
  ]
}